tab_model(model.rr,model.rt,model.acc,digits = 3)
dfwc <- summarySEwithinO(df.interval, measurevar="meanAccRT", withinvars=c("catRewLvl","catGainLvl"),idvar="SubID",na.rm=TRUE, conf.interval=.95)
library(ggplot2)
p<- ggplot(dfwc, aes(x=catGainLvl, y=meanAccRTNormed, fill=interaction(catGainLvl,catRewLvl))) +
geom_bar(stat="identity", color="black", position=position_dodge(.9)) +
geom_errorbar(aes(ymin=meanAccRTNormed-se, ymax=meanAccRTNormed+se), width=.2,
position=position_dodge(.9)) + coord_cartesian(ylim=c(0.45,0.55))
# Finished bar plot
p+labs(x="", y = "RT of correct response/s")+
theme_classic() + theme(text = element_text(size=20),
axis.text.y = element_text(size=10)) +
scale_fill_manual(values=c('#992200','#009F55','#EE0000','#00EE55')) +
guides(fill=guide_legend(title="Interval")) +
scale_y_continuous(labels = scales::number_format(accuracy = 0.01))
dfwc <- summarySEwithinO(df.interval, measurevar="meanAccRT", withinvars=c("catRewLvl","catGainLvl"),idvar="SubID",na.rm=TRUE, conf.interval=.95)
library(ggplot2)
p<- ggplot(dfwc, aes(x=catGainLvl, y=meanAccRTNormed, fill=interaction(catGainLvl,catRewLvl))) +
geom_bar(stat="identity", color="black", position=position_dodge(.9)) +
geom_errorbar(aes(ymin=meanAccRTNormed-se, ymax=meanAccRTNormed+se), width=.2,
position=position_dodge(.9)) + coord_cartesian(ylim=c(0.45,0.55))
# Finished bar plot
p+labs(x="", y = "RT of correct response/s")+
theme_classic() + theme(text = element_text(size=20),
axis.text.y = element_text(size=10)) +
scale_fill_manual(values=c('#992200','#009F55','#EE0000','#00EE55')) +
guides(fill=guide_legend(title="Interval")) +
scale_y_continuous(labels = scales::number_format(accuracy = 0.01))
View(dfwc)
View(df)
View(df.interval)
View(df.interval)
contrasts(df.interval$catGainLvl) <- contr.sum
contrasts(df.interval$catRewLvl) <- contr.sum
contrasts(df.interval$catSessionType) <- contr.sum
View(df.interval)
df.interval$catRewLvl
contr.sum
?contr.sum
View(df.interval)
View(df)
View(df.subject)
model.rr <- lme4::lmer(respRate ~ catRewLvl * catGainLvl + scaledIntervalNum + scaledIntervalDur + scaledMeanCong +
(1|SubID), data = df.interval)
tab_model(model.rr)
View(df.interval)
model.rr <- Lme4::lmer(respRate ~ RewLvl * GainLvl + (1|SubID), data = df.interval)
model.rr <- Lme4::lmer(respRate ~ RewLvl * GainLvl + (1|SubID), data = df.interval))
model.rr <- lme4::lmer(respRate ~ RewLvl * GainLvl + (1|SubID), data = df.interval)
tab_model(model.rr)
model.rr <- lme4::lmer(respRate ~ RewLvl * GainLvl + scaledIntervalNum + (1|SubID), data = df.interval)
tab_model(model.rr)
model.rr <- lme4::lmer(respRate ~ RewLvl * GainLvl + scaledIntervalNum + scaledIntervalDur + scaledMeanCong + (1|SubID), data = df.interval)
tab_model(model.rr)
model.rr <- lme4::lmer(respRate ~ RewLvl * GainLvl + scaledIntervalNum + scaledIntervalDur + scaledMeanCong +
(1|SubID), data = df.interval)
tab_model(model.rr)
model.rr <- lme4::lmer(respRate ~ RewLvl * GainLvl + scaledIntervalNum + scaledIntervalDur + scaledMeanCong +
(1|SubID), data = df.interval)
tab_model(model.rr)
model.rr <- lme4::lmer(respRate ~ RewLvl * GainLvl + scaledIntervalNum + scaledIntervalDur + scaledMeanCong +
(1+RewLvl*GainLvl|SubID), data = df.interval)
tab_model(model.rr)
tab_model(model.rr)
# Accuracy Model
model.acc <- lme4::glmer(meanAcc<1 ~ catRewLvl * catGainLvl + scaledIntervalNum + scaledIntervalDur + scaledMeanCong +
(1+RewLvl*GainLvl|SubID), family=binomial,data = df.interval)
tab_model(model.acc)
?contr.sum
# read in the formatted data
df<-read.csv(data.path)
# Summarise accuracy by subject
df.subject <- df %>% filter(Vers==curVersion) %>%
group_by(SubID) %>%
dplyr::summarise(meanAcc=mean(Acc,na.rm=T))
# Summarise data by subject and interval
df.interval <- df %>% filter(Vers==curVersion) %>%
group_by(SubID,IntervalNum,BlockNum,RewLvl,GainLvl,BlockType) %>%
dplyr::summarise(meanCongruence=mean(Congruency),
meanAcc=mean(Acc,na.rm=T),
respRate=sum(Acc,na.rm=T)/mean(IntervalLengthSecsNoISI),
IntervalDur=mean(IntervalLengthSecsNoISI),
meanAccRT=mean(AccRT,na.rm=T)) %>% ungroup() %>%
mutate(catRewLvl=relevel(factor(RewLvl,labels=c('Low','High')),'High'),
catGainLvl=relevel(factor(GainLvl,labels=c('Loss','Gain')),'Loss'),
catSessionType=relevel(fct_collapse(BlockType,
'ByLevel'=c('lowRew','highRew'),
'ByType'=c('gain','loss')),
ref='ByLevel'),
scaledIntervalNum=(IntervalNum-64)/64,
scaledIntervalDur=scale(IntervalDur),
scaledMeanCong=scale(meanCongruence),
logMeanAccRT=log10(meanAccRT)) %>%
filter(meanAcc>=0.6 & meanCongruence >0 & meanCongruence <1)
contrasts(df.interval$catGainLvl) <- contr.sum
contrasts(df.interval$catGainLvl) <- -contr.sum
contrasts(df.interval$catRewLvl) <- contr.sum
contrasts(df.interval$catSessionType) <- contr.sum
df.interval$df.interval$catGainLvl
df.interval$catGainLvl
tab_model(model.rr,model.rr2)
model.rr2 <- lme4::lmer(respRate ~ RewLvl * GainLvl + scaledIntervalNum + scaledIntervalDur + scaledMeanCong +
(1+RewLvl*GainLvl|SubID), data = df.interval)
tab_model(model.rr,model.rr2)
# Response Rate Model
model.rr <- lme4::lmer(respRate ~ catRewLvl * catGainLvl + scaledIntervalNum + scaledIntervalDur + scaledMeanCong +
(1|SubID), data = df.interval)
model.rr2 <- lme4::lmer(respRate ~ RewLvl * GainLvl + scaledIntervalNum + scaledIntervalDur + scaledMeanCong +
(1+RewLvl*GainLvl|SubID), data = df.interval)
tab_model(model.rr,model.rr2)
df.interval$catRewLvl
knitr::opts_chunk$set(echo = FALSE,message = FALSE, warning = FALSE)
rm(list=ls())
library(lme4)
library(ggplot2)
library(sjPlot)
library(dplyr)
library(tidyr)
library(forcats)
library(effects)
library(here)
if("plyr" %in% (.packages())) detach("package:plyr",unload=TRUE)
source("RFunctions/normDataWithin.R")
source("RFunctions/summarySE.R")
source("RFunctions/summarySEwithinO.R")
# Response Rate Model
model.rr <- lme4::lmer(respRate ~ catRewLvl * catGainLvl + scaledIntervalNum + scaledIntervalDur + scaledMeanCong +
(1|SubID), data = df.interval)
# Accuracy Model
model.acc <- lme4::glmer(meanAcc<1 ~ catRewLvl * catGainLvl + scaledIntervalNum + scaledIntervalDur + scaledMeanCong +
(1+RewLvl*GainLvl|SubID), family=binomial,data = df.interval)
tab_model(model.acc)
# Accuracy Model
model.acc <- lme4::glmer(meanAcc<1 ~ catRewLvl * catGainLvl + scaledIntervalNum + scaledIntervalDur + scaledMeanCong +
(1+RewLvl*GainLvl|SubID), family=binomial,data = df.interval)
# Accuracy Model
model.acc <- lme4::glmer(meanAcc<1 ~ catRewLvl * catGainLvl + scaledIntervalNum + scaledIntervalDur + scaledMeanCong +
(1+catRewLvl*catGainLvl|SubID), family=binomial,data = df.interval)
# Response Rate Model
model.rr <- lme4::lmer(respRate ~ catRewLvl * catGainLvl + scaledIntervalNum + scaledIntervalDur + scaledMeanCong +
(1|SubID), data = df.interval)
knitr::opts_chunk$set(echo = FALSE,message = FALSE, warning = FALSE)
rm(list=ls())
library(lme4)
library(ggplot2)
library(sjPlot)
library(dplyr)
library(tidyr)
library(forcats)
library(effects)
library(here)
if("plyr" %in% (.packages())) detach("package:plyr",unload=TRUE)
source("RFunctions/normDataWithin.R")
source("RFunctions/summarySE.R")
source("RFunctions/summarySEwithinO.R")
# Paths for data
data.path<-here("DataFormatted/data_TSS-TCB-fMRIstudy_version201.csv")
srm.path<-here("Data/Redcap/cleanSRMS1.csv")
# Paths for storing Figures
figure.path<-here("Figures")
curVersion=201
# read in the formatted data
df<-read.csv(data.path)
# Summarise accuracy by subject
df.subject <- df %>% filter(Vers==curVersion) %>%
group_by(SubID) %>%
dplyr::summarise(meanAcc=mean(Acc,na.rm=T))
# Summarise data by subject and interval
df.interval <- df %>% filter(Vers==curVersion) %>%
group_by(SubID,IntervalNum,BlockNum,RewLvl,GainLvl,BlockType) %>%
dplyr::summarise(meanCongruence=mean(Congruency),
meanAcc=mean(Acc,na.rm=T),
respRate=sum(Acc,na.rm=T)/mean(IntervalLengthSecsNoISI),
IntervalDur=mean(IntervalLengthSecsNoISI),
meanAccRT=mean(AccRT,na.rm=T)) %>% ungroup() %>%
mutate(catRewLvl=relevel(factor(RewLvl,labels=c('Low','High')),'High'),
catGainLvl=relevel(factor(GainLvl,labels=c('Loss','Gain')),'Loss'),
catSessionType=relevel(fct_collapse(BlockType,
'ByLevel'=c('lowRew','highRew'),
'ByType'=c('gain','loss')),
ref='ByLevel'),
scaledIntervalNum=(IntervalNum-64)/64,
scaledIntervalDur=scale(IntervalDur),
scaledMeanCong=scale(meanCongruence),
logMeanAccRT=log10(meanAccRT)) %>%
filter(meanAcc>=0.6 & meanCongruence >0 & meanCongruence <1)
# Add contrast coding to the variables of interest
contrasts(df.interval$catGainLvl)<-contr.sum
contrasts(df.interval$catRewLvl)<-contr.sum
contrasts(df.interval$catSessionType)<-contr.sum
# Response Rate Model
model.rr <- lme4::lmer(respRate ~ catRewLvl * catGainLvl + scaledIntervalNum + scaledIntervalDur + scaledMeanCong +
(1|SubID), data = df.interval)
# Response Time Model
model.rt <- lme4::lmer(meanAccRT ~ catRewLvl * catGainLvl + scaledIntervalNum + scaledIntervalDur + scaledMeanCong +
(1|SubID), data = df.interval)
# Accuracy Model
model.acc <- lme4::glmer(meanAcc<1 ~ catRewLvl * catGainLvl + scaledIntervalNum + scaledIntervalDur + scaledMeanCong +
(1+catRewLvl*catGainLvl|SubID), family=binomial,data = df.interval)
tab_model(model.acc)
# Visulize the model
tab_model(model.rr,model.rt,model.acc,digits = 3)
#           pred.labels = c('(Intercept)','Incentive Magnitude','Incentive Valence','Interval Number',,'Mean Congruency','Value: Role')
# Visulize the model
tab_model(model.rr,model.rt,model.acc,digits = 3,
pred.labels = c("Intercept","Incentive Magnitude","Incentive Type", "Interval Number",
"Interval Duration", "Mean Congruency", "Magnitude:Type"))
tab_model(model.acc,show.icc = F,show.re.var = F)
# Add contrast coding to the variables of interest
contrasts(df.interval$catGainLvl)<-contr.sum
contrasts(df.interval$catRewLvl)<-contr.sum
contrasts(df.interval$catSessionType)<-contr.sum
# Response Rate Model
model.rr <- lme4::lmer(respRate ~ catRewLvl * catGainLvl + scaledIntervalNum + scaledIntervalDur + scaledMeanCong +
(1|SubID), data = df.interval)
# Response Time Model
model.rt <- lme4::lmer(meanAccRT ~ catRewLvl * catGainLvl + scaledIntervalNum + scaledIntervalDur + scaledMeanCong +
(1|SubID), data = df.interval)
# Accuracy Model
model.acc <- lme4::glmer(meanAcc<1 ~ catRewLvl * catGainLvl + scaledIntervalNum + scaledIntervalDur + scaledMeanCong +
(1+catRewLvl*catGainLvl|SubID), family=binomial,data = df.interval)
tab_model(model.acc)
# Visulize the model
tab_model(model.rr,model.rt,model.acc,digits = 3,
pred.labels = c("Intercept","Incentive Magnitude","Incentive Type", "Interval Number",
"Interval Duration", "Mean Congruency", "Magnitude:Type"))
# Visulize the model
tab_model(model.rr,model.rt,model.acc,digits = 3,
pred.labels = c("Intercept","Incentive Magnitude","Incentive Type", "Interval Number",
"Interval Duration", "Mean Congruency", "Magnitude:Type"),
dv.labels = c("Response Rate", "Respeonse Time","Accuracy"))
# Add contrast coding to the variables of interest
contrasts(df.interval$catGainLvl)<-contr.sum
contrasts(df.interval$catRewLvl)<-contr.sum
contrasts(df.interval$catSessionType)<-contr.sum
# Response Rate Model
model.rr <- lme4::lmer(respRate ~ catRewLvl * catGainLvl + scaledIntervalNum + scaledIntervalDur + scaledMeanCong +
(1+catRewLvl*catGainLvl|SubID), data = df.interval)
# Response Time Model
model.rt <- lme4::lmer(meanAccRT ~ catRewLvl * catGainLvl + scaledIntervalNum + scaledIntervalDur + scaledMeanCong +
(1+catRewLvl*catGainLvl|SubID), data = df.interval)
# Accuracy Model
model.acc <- lme4::glmer(meanAcc<1 ~ catRewLvl * catGainLvl + scaledIntervalNum + scaledIntervalDur + scaledMeanCong +
(1+catRewLvl*catGainLvl|SubID), family=binomial,data = df.interval)
tab_model(model.acc)
# Visulize the model
tab_model(model.rr,model.rt,model.acc,digits = 3,
pred.labels = c("Intercept","Incentive Magnitude","Incentive Type", "Interval Number",
"Interval Duration", "Mean Congruency", "Magnitude:Type"),
dv.labels = c("Response Rate", "Respeonse Time","Accuracy"))
tab_model(model.rr, digits = 3,
pred.labels = c("Intercept","Incentive Magnitude","Incentive Type", "Interval Number",
"Interval Duration", "Mean Congruency", "Magnitude:Type"),
dv.labels = c("Response Rate", "Respeonse Time","Accuracy"))
tab_model(model.rr, digits = 3,
pred.labels = c("Intercept","Incentive Magnitude","Incentive Type", "Interval Number",
"Interval Duration", "Mean Congruency", "Magnitude:Type"),
dv.labels = c("Response Rate"))
tab_model(model.rr, digits = 3, show.icc = FALSE, show.re.var = FALSE,
pred.labels = c("Intercept","Incentive Magnitude","Incentive Type", "Interval Number",
"Interval Duration", "Mean Congruency", "Magnitude:Type"),
dv.labels = c("Response Rate"))
# Response Rate Only
tab_model(model.rr, digits = 3, show.icc = FALSE, show.re.var = FALSE,
pred.labels = c("Intercept","Incentive Magnitude","Incentive Type", "Interval Number",
"Interval Duration", "Mean Congruency", "Magnitude:Type"),
dv.labels = c("Response Rate"))
# Response Time Only
tab_model(model.rt, digits = 3, show.icc = FALSE, show.re.var = FALSE,
pred.labels = c("Intercept","Incentive Magnitude","Incentive Type", "Interval Number",
"Interval Duration", "Mean Congruency", "Magnitude:Type"),
dv.labels = c("Response Time"))
# Accuracy Only
tab_model(model.acc, digits = 3, show.icc = FALSE, show.re.var = FALSE,
pred.labels = c("Intercept","Incentive Magnitude","Incentive Type", "Interval Number",
"Interval Duration", "Mean Congruency", "Magnitude:Type"),
dv.labels = c("Accuracy"))
tab_model(model.rr, digits = 3, show.icc = FALSE, show.re.var = FALSE,
pred.labels = c("Intercept","Incentive Magnitude","Incentive Type", "Interval Number",
"Interval Duration", "Mean Congruency", "Magnitude:Type"),
dv.labels = c("Response Rate"))
tab_model(model.rt, digits = 3, show.icc = FALSE, show.re.var = FALSE,
pred.labels = c("Intercept","Incentive Magnitude","Incentive Type", "Interval Number",
"Interval Duration", "Mean Congruency", "Magnitude:Type"),
dv.labels = c("Response Time"))
tab_model(model.acc, digits = 3, show.icc = FALSE, show.re.var = FALSE,
pred.labels = c("Intercept","Incentive Magnitude","Incentive Type", "Interval Number",
"Interval Duration", "Mean Congruency", "Magnitude:Type"),
dv.labels = c("Accuracy"))
dfwc <- summarySEwithinO(df.interval, measurevar="meanAccRT", withinvars=c("catRewLvl","catGainLvl"),idvar="SubID",na.rm=TRUE, conf.interval=.95)
p<- ggplot(dfwc, aes(x=catGainLvl, y=meanAccRTNormed, fill=interaction(catGainLvl,catRewLvl))) +
geom_bar(stat="identity", color="black", position=position_dodge(.9)) +
geom_errorbar(aes(ymin=meanAccRTNormed-se, ymax=meanAccRTNormed+se), width=.2,
position=position_dodge(.9)) + coord_cartesian(ylim=c(0.45,0.55))
# Finished bar plot
p+labs(x="", y = "RT of correct response/s")+
theme_classic() + theme(text = element_text(size=20),
axis.text.y = element_text(size=10)) +
scale_fill_manual(values=c('#992200','#009F55','#EE0000','#00EE55')) +
guides(fill=guide_legend(title="Interval")) +
scale_y_continuous(labels = scales::number_format(accuracy = 0.01))
p.RT
p.RT<- ggplot(dfwc, aes(x=catGainLvl, y=meanAccRTNormed, fill=interaction(catGainLvl,catRewLvl))) +
geom_bar(stat="identity", color="black", position=position_dodge(.9)) +
geom_errorbar(aes(ymin=meanAccRTNormed-se, ymax=meanAccRTNormed+se), width=.2,
position=position_dodge(.9)) + coord_cartesian(ylim=c(0.45,0.55)) +
labs(x="", y = "RT of correct response/s")+
theme_classic() + theme(text = element_text(size=20),
axis.text.y = element_text(size=10)) +
scale_fill_manual(values=c('#992200','#009F55','#EE0000','#00EE55')) +
guides(fill=guide_legend(title="Interval")) +
scale_y_continuous(labels = scales::number_format(accuracy = 0.01))
p.RT
dfwc <- summarySEwithinO(df.interval, measurevar="respRate", withinvars=c("catRewLvl","catGainLvl"),idvar="SubID",na.rm=TRUE, conf.interval=.95)
p.rr<- ggplot(dfwc, aes(x=catGainLvl, y=respRateNormed, fill=interaction(catGainLvl,catRewLvl))) +
geom_bar(stat="identity", color="black",
position=position_dodge(.9)) +
geom_errorbar(aes(ymin=respRateNormed-se, ymax=respRateNormed+se), width=.2,
position=position_dodge(.9)) + coord_cartesian(ylim=c(1.3,1.7)) +
labs(x="", y = "Response Rate")+
theme_classic() + theme(text = element_text(size=20),
axis.text.y = element_text(size=10)) +
scale_fill_manual(values=c('#992200','#009F55','#EE0000','#00EE55')) +
guides(fill=guide_legend(title="Interval")) +
scale_y_continuous(labels = scales::number_format(accuracy = 0.1))
p.rr
dfwc <- summarySEwithinO(df.interval, measurevar="meanAcc", withinvars=c("catRewLvl","catGainLvl"),idvar="SubID",na.rm=TRUE, conf.interval=.95)
p.acc<- ggplot(dfwc, aes(x=catGainLvl, y=meanAccNormed, fill=interaction(catGainLvl,catRewLvl))) +
geom_bar(stat="identity", color="black",
position=position_dodge(.9)) +
geom_errorbar(aes(ymin=meanAccNormed-se, ymax=meanAccNormed+se), width=.2,
position=position_dodge(.9)) + coord_cartesian(ylim=c(0.85,0.95)) +
labs(x="", y = "Accuracy")+
theme_classic() + theme(text = element_text(size=20),
axis.text.y = element_text(size=10)) +
scale_fill_manual(values=c('#992200','#009F55','#EE0000','#00EE55')) +
guides(fill=guide_legend(title="Interval")) +
scale_y_continuous(labels = scales::number_format(accuracy = 0.01))
p.acc
df.prev.cong <- df %>% group_by(SubID,BlockNum,IntervalNum) %>%
mutate(prevCongruence=c(NaN,Congruency[1:length(Congruency)-1])) %>%
ungroup()
df.trial <- df.prev.cong %>% filter(Vers==curVersion & !is.na(prevCongruence)) %>%
mutate(catRewLvl=factor(RewLvl,labels=c('Low','High')),
catGainLvl=factor(GainLvl,labels=c('Loss','Gain')),
catSessionType=relevel(fct_collapse(BlockType,
'ByLevel'=c('lowRew','highRew'),
'ByType'=c('gain','loss')),
ref='ByLevel'),
catCongruence=factor(Congruency,labels=c('InCongrunet','Congruent')),
catPrevCongruence=factor(prevCongruence,labels=c('InCongrunet','Congruent')),
scaledIntervalNum=(IntervalNum-64)/64,
scaledTrialNum=(IntervalTrialNum-5)/5,
scaledIntervalDur=(IntervalLength-7.5)/1.5,
mean_Acc=RespRateCorr/RespRateAll)
model.accrt <- lmer(logAccRT ~ catSessionType * catRewLvl * catGainLvl * catCongruence *
catPrevCongruence + scaledIntervalNum + scaledTrialNum + scaledIntervalDur +
(1+catRewLvl*catGainLevl|SubID), data = df.trial)
tab_model(model.accrt)
model.accrt <- lmer(logAccRT ~ catSessionType * catRewLvl * catGainLvl * catCongruence *
catPrevCongruence + scaledIntervalNum + scaledTrialNum + scaledIntervalDur +
(1+catRewLvl*catGainLevl|SubID), data = df.trial)
model.accrt <- lmer(logAccRT ~ catSessionType * catRewLvl * catGainLvl * catCongruence *
catPrevCongruence + scaledIntervalNum + scaledTrialNum + scaledIntervalDur +
(1+catRewLvl*catGainLvl|SubID), data = df.trial)
model.accrt <- lmer(logAccRT ~ catSessionType * catRewLvl * catGainLvl * catCongruence *
catPrevCongruence + scaledIntervalNum + scaledTrialNum + scaledIntervalDur +
(1+catRewLvl*catGainLvl|SubID), data = df.trial)
tab_model(model.accrt)
# Make the graph with the 95% confidence interval
ggplot(dfwc, aes(x=catPrevCongruence, y=logAccRTNormed,color=catCongruence,group=catCongruence)) +
geom_line() +
geom_errorbar(width=.1, aes(ymin=logAccRTNormed-se, ymax=logAccRTNormed+se)) +
dfwc <- summarySEwithinO(df.trial, measurevar="logAccRT",
withinvars=c("catCongruence","catPrevCongruence","catGainLvl","catRewLvl"),
idvar="SubID",na.rm=TRUE, conf.interval=.95)
dfwc <- summarySEwithinO(df.trial, measurevar="logAccRT",
withinvars=c("catCongruence","catPrevCongruence","catGainLvl","catRewLvl"),
idvar="SubID",na.rm=TRUE, conf.interval=.95)
# Make the graph with the 95% confidence interval
ggplot(dfwc, aes(x=catPrevCongruence, y=logAccRTNormed,
color=catCongruence,group=catCongruence)) +
geom_line() +
geom_errorbar(width=.1, aes(ymin=logAccRTNormed-se, ymax=logAccRTNormed+se)) +
facet_grid(rows=vars(catGainLvl),cols=vars(catRewLvl))
View(df.trial)
View(df.trial)
# read in the formatted data
df<-read.csv(data.path)
# Summarise accuracy by subject
df.subject <- df %>% filter(Vers==curVersion) %>%
group_by(SubID) %>%
dplyr::summarise(meanAcc=mean(Acc,na.rm=T))
# Summarise data by subject and interval
df.interval <- df %>% filter(Vers==curVersion) %>%
group_by(SubID,IntervalNum,BlockNum,RewLvl,GainLvl,BlockType) %>%
dplyr::summarise(meanCongruence=mean(Congruency),
meanAcc=mean(Acc,na.rm=T),
respRate=sum(Acc,na.rm=T)/mean(IntervalLengthSecsNoISI),
IntervalDur=mean(IntervalLengthSecsNoISI),
meanAccRT=mean(AccRT,na.rm=T)) %>% ungroup() %>%
mutate(catRewLvl=relevel(factor(RewLvl,labels=c('Low','High')),'High'),
catGainLvl=relevel(factor(GainLvl,labels=c('Loss','Gain')),'Loss'),
catSessionType=relevel(fct_collapse(BlockType,
'ByLevel'=c('lowRew','highRew'),
'ByType'=c('gain','loss')),
ref='ByLevel'),
scaledIntervalNum=(IntervalNum-64)/64,
scaledIntervalDur=scale(IntervalDur),
scaledMeanCong=scale(meanCongruence),
logMeanAccRT=log10(meanAccRT)) %>%
filter(meanAcc>=0.6 & meanCongruence >0 & meanCongruence <1)
# Add contrast coding to the variables of interest
contrasts(df.interval$catGainLvl)<-contr.sum
contrasts(df.interval$catRewLvl)<-contr.sum
contrasts(df.interval$catSessionType)<-contr.sum
# Summarise data by subject and trial
df.trial <- df.prev.cong %>% filter(Vers==curVersion & !is.na(prevCongruence)) %>%
mutate(catRewLvl=factor(RewLvl,labels=c('Low','High')),
catGainLvl=factor(GainLvl,labels=c('Loss','Gain')),
catSessionType=relevel(fct_collapse(BlockType,
'ByLevel'=c('lowRew','highRew'),
'ByType'=c('gain','loss')),
ref='ByLevel'),
catCongruence=factor(Congruency,labels=c('InCongruent','Congruent')),
catPrevCongruence=factor(prevCongruence,labels=c('InCongruent','Congruent')),
scaledIntervalNum=(IntervalNum-64)/64,
scaledTrialNum=(IntervalTrialNum-5)/5,
scaledIntervalDur=(IntervalLength-7.5)/1.5,
mean_Acc=RespRateCorr/RespRateAll)
# Add contrast coding to the variables of interest
contrasts(df.trial$catGainLvl)<-contr.sum
contrasts(df.trial$catRewLvl)<-contr.sum
contrasts(df.trial$catSessionType)<-contr.sum
contrasts(df.trial$catCongruence)<-contr.sum
contrasts(df.trial$catPrevCongruence)<-contr.sum
df.prev.cong <- df %>% group_by(SubID,BlockNum,IntervalNum) %>%
mutate(prevCongruence=c(NaN,Congruency[1:length(Congruency)-1])) %>%
ungroup()
model.accrt <- lmer(logAccRT ~ catSessionType * catRewLvl * catGainLvl * catCongruence *
catPrevCongruence + scaledIntervalNum + scaledTrialNum + scaledIntervalDur +
(1+catRewLvl*catGainLvl|SubID), data = df.trial)
tab_model(model.accrt)
eff_df <- Effect(c("catPrevCongruence","catRewLvl","catGainLvl"), model.accrt)
IA <- as.data.frame(eff_df)
View(IA)
dfwc <- summarySEwithinO(df.trial, measurevar="logAccRT",
withinvars=c("catCongruence","catPrevCongruence","catGainLvl","catRewLvl"),
idvar="SubID",na.rm=TRUE, conf.interval=.95)
# Make the graph with the 95% confidence interval
ggplot(dfwc, aes(x=catPrevCongruence, y=logAccRTNormed,
color=catCongruence,group=catCongruence)) +
geom_line() +
geom_errorbar(width=.1, aes(ymin=logAccRTNormed-se, ymax=logAccRTNormed+se)) +
facet_grid(rows=vars(catGainLvl),cols=vars(catRewLvl)) +
labs(x="Congruency")
# Make the graph with the 95% confidence interval
ggplot(dfwc, aes(x=catPrevCongruence, y=logAccRTNormed,
color=catCongruence,group=catCongruence)) +
geom_line() +
geom_errorbar(width=.1, aes(ymin=logAccRTNormed-se, ymax=logAccRTNormed+se)) +
facet_grid(rows=vars(catGainLvl),cols=vars(catRewLvl)) +
labs(x="Congruency", y="Log RT")
# Make the graph with the 95% confidence interval
ggplot(dfwc, aes(x=catPrevCongruence, y=logAccRTNormed,
color=catCongruence,group=catCongruence)) +
geom_line() +
geom_errorbar(width=.1, aes(ymin=logAccRTNormed-se, ymax=logAccRTNormed+se)) +
facet_grid(rows=vars(catGainLvl),cols=vars(catRewLvl)) +
labs(x="Congruency", y="Log RT", title="Congruency Effects")
# Make the graph with the 95% confidence interval
ggplot(dfwc, aes(x=catPrevCongruence, y=logAccRTNormed,
color=catCongruence,group=catCongruence)) +
geom_line() +
geom_errorbar(width=.1, aes(ymin=logAccRTNormed-se, ymax=logAccRTNormed+se)) +
facet_grid(rows=vars(catGainLvl),cols=vars(catRewLvl)) +
labs(x="Congruency", y="Log RT", title="Congruency Effects") +
scale_fill_discrete(name = "Trial Type")
# Make the graph with the 95% confidence interval
ggplot(dfwc, aes(x=catPrevCongruence, y=logAccRTNormed,
color=catCongruence,group=catCongruence)) +
geom_line() +
geom_errorbar(width=.1, aes(ymin=logAccRTNormed-se, ymax=logAccRTNormed+se)) +
facet_grid(rows=vars(catGainLvl),cols=vars(catRewLvl)) +
labs(x="Congruency", y="Log RT", title="Congruency Effects", color="Trial")
# Make the graph with the 95% confidence interval
ggplot(dfwc, aes(x=catPrevCongruence, y=logAccRTNormed,
color=catCongruence,group=catCongruence)) +
geom_line() +
geom_errorbar(width=.1, aes(ymin=logAccRTNormed-se, ymax=logAccRTNormed+se)) +
facet_grid(rows=vars(catGainLvl),cols=vars(catRewLvl)) +
labs(x="Congruency", y="Log RT", title="Congruency Effects", color="Trial Type")
tab_model(model.accrt)
IA <- as.data.frame(eff_df)
View(IA)
kable(IA)
library(kable)
install.packages("kable")
kable(IA)
install.packages("kableExtra")
library(kableExtra)
eff_df <- Effect(c("catPrevCongruence","catRewLvl","catGainLvl"), model.accrt)
IA <- as.data.frame(eff_df) %>%
kable() %>%
kable_styling()
View(eff_df)
# Make the graph with the 95% confidence interval
ggplot(dfwc, aes(x=catPrevCongruence, y=logAccRTNormed,
color=catCongruence,group=catCongruence)) +
geom_line() +
geom_errorbar(width=.1, aes(ymin=logAccRTNormed-se, ymax=logAccRTNormed+se)) +
facet_grid(rows=vars(catGainLvl),cols=vars(catRewLvl)) +
labs(x="Previous Trial", y="Log RT", title="Congruency Effects", color=" Current Trial")
